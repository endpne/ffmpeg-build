name: Check new version

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  build:
    permissions:
      contents: write
      pull-requests: write
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - name: Checkout ffmpeg
        uses: actions/checkout@v4
        with:
          repository: "FFmpeg/FFmpeg"
          path: 'ffmpeg'
          fetch-depth: 0

      - name: Get latest verion
        id: version
        run: |
          cd ./ffmpeg
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "ffmpeg latest tag: $latest_tag"
          echo "FFMPEG_LATEST_VERSION=$latest_tag" >> $GITHUB_ENV
          cd ..
          rm -rf ./ffmpeg

      - name: update to new version
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import re

            def parse_version(ver):
              if '-' in ver or ver == '':
                return 0
              return int(re.sub(r'[^0-9]+', r'', ver))

            commitMessage = ''

            file_path = './Sources/BuildScripts/XCFrameworkBuild/main.swift'
            with open(file_path, 'r', encoding='utf-8') as file:
              content = file.read()
            ffmpegOldVersion = re.search(r'(case .FFmpeg[^"]+?)"(.+?)"', content).group(2)
            print("ffmpeg old version:", ffmpegOldVersion)
            ffmpegNewVersion = '${{ env.FFMPEG_LATEST_VERSION }}'
            if parse_version(ffmpegNewVersion) > parse_version(ffmpegOldVersion):
              content = re.sub(r'(case .FFmpeg[^"]+?)"(.+?)"', r'\1"${{ env.FFMPEG_LATEST_VERSION }}"', content, count=1)
              commitMessage += "FFmpeg bump version to ${{ env.FFMPEG_LATEST_VERSION }}\n"
            with open(file_path, 'w', encoding='utf-8') as file:
              file.write(content)
            

            file_path = './README.md'
            with open(file_path, 'r', encoding='utf-8') as file:
              content = file.read()
            if parse_version(ffmpegNewVersion) > parse_version(ffmpegOldVersion):
              content = re.sub(r'ffmpeg-.*-blue', r'ffmpeg-${{ env.FFMPEG_LATEST_VERSION }}-blue', content, count=1)
            with open(file_path, 'w', encoding='utf-8') as file:
              file.write(content)

            set_env('COMMIT_MESSAGE', commitMessage)


      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          add-paths: |
            ./Sources/BuildScripts/XCFrameworkBuild/main.swift
            ./README.md
          title: "FFmpeg ${{ env.FFMPEG_LATEST_VERSION }}"
          body: "${{ env.COMMIT_MESSAGE }}"
          commit-message: "chore: ${{ env.COMMIT_MESSAGE }}"
          